{"version":3,"sources":["../src/heatmap.js"],"names":[],"mappings":"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","file":"heatmap.js","sourcesContent":["import angular from 'angular';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport './bower_components/d3/d3.min.js';\nimport './bower_components/epoch/dist/js/epoch.min.js';\n\nangular.module('grafana.directives').directive('grafanaHeatmapEpoch', function($rootScope, timeSrv) {\n  return {\n    restrict: 'A',\n    template: '<div> </div>',\n    link: function(scope, elem) {\n      var ctrl = scope.ctrl;\n      var dashboard = ctrl.dashboard;\n      var panel = ctrl.panel;\n      var data;\n      var sortedSeries;\n      var legendSideLastValue = null;\n      var rootScope = scope.$root;\n      var epoch = null;\n      var labelToModelIndexMap = {};\n      var currentDatasource = '';\n\n      // Receive render events\n      ctrl.events.on('render', function(renderData) {\n        data = renderData || data;\n        if (!data) {\n          ctrl.refresh();\n          return;\n        }\n        render_panel();\n      });\n\n      function getLegendHeight(panelHeight) {\n        if (!panel.legend.show || panel.legend.rightSide) {\n          return 2;\n        }\n\n        if (panel.legend.alignAsTable) {\n          var legendSeries = _.filter(data, function(series) {\n            return series.hideFromLegend(panel.legend) === false;\n          });\n          var total = 23 + (22 * legendSeries.length);\n          return Math.min(total, Math.floor(panelHeight/2));\n        } else {\n          return 26;\n        }\n      }\n\n      function setElementHeight() {\n        try {\n          var height = ctrl.height - getLegendHeight(ctrl.height);\n          elem.css('height', height + 'px');\n\n          return true;\n        } catch(e) { // IE throws errors sometimes\n          console.log(e);\n          return false;\n        }\n      }\n\n      function shouldAbortRender() {\n        if (!data) {\n          return true;\n        }\n\n        if (!setElementHeight()) { return true; }\n\n        if (elem.width() === 0) {\n          return true;\n        }\n      }\n\n      function processOffsetHook(plot, gridMargin) {\n        var left = panel.yaxes[0];\n        var right = panel.yaxes[1];\n        if (left.show && left.label) { gridMargin.left = 20; }\n        if (right.show && right.label) { gridMargin.right = 20; }\n      }\n\n      function getHeatmapData(datapoints) {\n        var windowInterval = (ctrl.range.to - ctrl.range.from) / panel.heatmapOptions.windowSize;\n        return _.chain(datapoints)\n        .reject(function(dp) {\n          return dp[0] === null;\n        })\n        .groupBy(function(dp) {\n          return Math.floor(dp[1] / windowInterval);\n        })\n        .map(function(values, timeKey) {\n          return {\n            time: Math.floor(timeKey * windowInterval / 1000),\n            histogram: _.countBy(values, function(value) {\n              return value[0];\n            })\n          };\n        })\n        .sortBy(function(dp) {\n          return dp.time;\n        }).value();\n      }\n\n      function callPlot(incrementRenderCounter) {\n        try {\n          epoch = elem.epoch(panel.heatmapOptions);\n          scope.$watch('ctrl.panel.heatmapOptions.windowSize', function(newVal, oldVal) {\n            epoch.option('windowSize', newVal);\n            epoch.option('historySize', newVal * 3);\n          });\n          scope.$watch('ctrl.panel.heatmapOptions.buckets', function(newVal, oldVal) {\n            epoch.option('buckets', newVal);\n          });\n          scope.$watch('ctrl.panel.heatmapOptions.bucketRange', function(newVal, oldVal) {\n            epoch.option('bucketRange', newVal);\n          });\n        } catch (e) {\n          console.log('epoch error', e);\n        }\n\n        if (incrementRenderCounter) {\n          ctrl.renderingCompleted();\n        }\n      }\n\n      // Function for rendering panel\n      function render_panel() {\n        if (shouldAbortRender()) {\n          return;\n        }\n\n        if (panel.datasource !== currentDatasource) {\n          panel.heatmapOptions.startTime = Math.floor(ctrl.range.from.valueOf() / 1000);\n          epoch = null;\n        }\n        currentDatasource = panel.datasource;\n\n        var delta = true;\n        var seriesData = _.map(data, function (series, i) {\n          delta = delta && series.color; // use color as delta temporaly, if all series is delta, enable realtime chart\n\n          // if hidden remove points\n          if (ctrl.hiddenSeries[series.alias]) {\n            return [];\n          }\n\n          return {\n            label: series.label,\n            values: getHeatmapData(series.datapoints)\n          };\n        });\n\n        if (epoch && delta) {\n          var indexedData = [];\n          var dataLength = 0;\n          _.each(data, function (series) {\n            if (_.isUndefined(labelToModelIndexMap[series.label])) {\n              return;\n            }\n\n            var values = getHeatmapData(series.datapoints);\n            indexedData[labelToModelIndexMap[series.label]] = values;\n            if (dataLength < values.length) {\n              dataLength = values.length;\n            }\n          });\n\n          if (!_.isEmpty(indexedData)) {\n            var now = new Date() / 1000;\n            for (var n = 0; n < dataLength; n++) {\n              var pushData = indexedData.map(function (d) {\n                return d[n] || {\n                  time: now,\n                  histogram: {\n                    0: 0\n                  }\n                };\n              });\n              epoch.push(pushData);\n            }\n          }\n          ctrl.renderingCompleted();\n        } else {\n          labelToModelIndexMap = {};\n          _.each(data, function (series, i) {\n            labelToModelIndexMap[series.label] = i;\n          });\n\n          panel.heatmapOptions.data = seriesData;\n\n          if (shouldDelayDraw(panel)) {\n            // temp fix for legends on the side, need to render twice to get dimensions right\n            callPlot(false);\n            setTimeout(function() { callPlot(true); }, 50);\n            legendSideLastValue = panel.legend.rightSide;\n          } else {\n            callPlot(true);\n          }\n        }\n      }\n\n      function shouldDelayDraw(panel) {\n        if (panel.legend.rightSide) {\n          return true;\n        }\n        if (legendSideLastValue !== null && panel.legend.rightSide !== legendSideLastValue) {\n          return true;\n        }\n      }\n\n      elem.bind(\"plotselected\", function (event, ranges) {\n        scope.$apply(function() {\n          timeSrv.setTime({\n            from  : moment.utc(ranges.xaxis.from),\n            to    : moment.utc(ranges.xaxis.to),\n          });\n        });\n      });\n    }\n  };\n});\n"]}